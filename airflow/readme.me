cd ~/Documents/ # Create a new directory for your Airflow project 
mkdir airflow_local 
cd airflow_local

– create virtual venv 

source venv/bin/activate


export AIRFLOW_HOME=$(pwd)

AIRFLOW_VERSION=3.0.2

PYTHON_VERSION="$(python -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')" # This gets your active Python's major.minor version (e.g., 3.12)
CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt"

pip install "apache-airflow[celery,cncf.kubernetes,docker,ftp,google,http,imap,jdbc,jenkins,microsoft.azure,mysql,postgres,redis,s3,sqlite]==${AIRFLOW_VERSION}" --constraint "${CONSTRAINT_URL}"




airflow db migrate


airflow standalone

This will generate the temp username and pwd. 
Username → admin
Pwd → random (Check Logs)






http://localhost:8080


To Start Airflow Again (in a new session):
Open your terminal.
Navigate back to your project directory: cd ~/Documents/airflow_local (or wherever you created it).
Activate your virtual environment: source venv/bin/activate
Set AIRFLOW_HOME: export AIRFLOW_HOME=$(pwd)
Start Airflow: airflow standalone



Airflow Connections:







---------------------------------------------------------------------------
Setup connection in airflow

{'connection_id': '<any name, e.g. snowflake-connection>',
'connection_type': 'snowflake',
'schema': 'ahs-airflow-schema',
'login' : 'username , e.g. ADITYA121224',
'password': 'XXXX',
'extra' : '<can keep blank>',
'account': 'ry85890.ap-southeast-1',
'warehouse': 'COMPUTE_WH',
'role': 'ACCOUNTADMIN'

}



----------------------------------------------------------------------------------
snowflake account information: 
'account_link': 'https://menphpm-so19591.snowflakecomputing.com/'
'account_indentifier': 'menphpm-so19591'
used in python normal connection -- account_identifier
used in SNOWFLAKE_SQLALCHEMY_URI -- menphpm-so19591


-------------------------------------------------


